server {
    listen 80;
    listen [::]:80;
    
    # Cambiar por tu dominio o IP del servidor
    server_name 192.168.0.102;
    
    # Directorio raíz del proyecto Laravel
    root /var/www/html/app-mecanica/Mecanica/public;
    index index.php index.html index.htm;

    # Configuración de logs
    access_log /var/log/nginx/mecanica_access.log;
    error_log /var/log/nginx/mecanica_error.log;

    # Configuración de seguridad básica
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;

    # Archivos estáticos del frontend (React build)
    location /assets {
        alias /var/www/html/app-mecanica/vistas/dist/assets;
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Manejar rutas de la SPA (React Router)
    location / {
        try_files $uri $uri/ /index.php?$query_string;
        
        # Servir el frontend React para rutas que no son API
        location ~* ^/(?!api/|admin/) {
            try_files $uri $uri/ @fallback;
        }
    }

    # Fallback para el frontend React
    location @fallback {
        root /var/www/html/app-mecanica/vistas/dist;
        try_files /index.html =404;
    }

    # Rutas de la API Laravel
    location /api {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Procesar archivos PHP
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.2-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Configuración de timeout
        fastcgi_read_timeout 300;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
    }

    # Denegar acceso a archivos sensibles
    location ~ /\.(?!well-known).* {
        deny all;
    }

    # Denegar acceso a archivos de configuración
    location ~ \.(env|log|conf)$ {
        deny all;
    }

    # Optimización de archivos estáticos
    location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        log_not_found off;
    }

    # Configuración de uploads
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;
}

# Configuración HTTPS (descomenta cuando tengas SSL)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name tu-dominio.com;
#
#     ssl_certificate /etc/letsencrypt/live/tu-dominio.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/tu-dominio.com/privkey.pem;
#     
#     # El resto de la configuración es igual que el bloque HTTP
#     # ... (copiar todo el contenido del server block de arriba)
# }

# Redirección HTTP a HTTPS (descomenta cuando tengas SSL)
# server {
#     listen 80;
#     listen [::]:80;
#     server_name tu-dominio.com;
#     return 301 https://$server_name$request_uri;
# }
